package controllers;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ObjectMapper;

import data.ExpenseItemDAO;
import entities.ExpenseItem;

@RestController
public class ExpenseItemController {
	
	@PersistenceContext
	public EntityManager em; 

	@Autowired
	private ExpenseItemDAO eiDAO;

	// mapping test
	@RequestMapping(value = "/expenseItem/ping", method = RequestMethod.GET)
	public String ping() {
		return "PONG FROM EXPENSE ITEM CONTROLLER";
	}

	// gets a list of expense items
	@RequestMapping(value = "/expenseItem", method = RequestMethod.GET)
	public List<ExpenseItem> index() {
		return eiDAO.index();
	}

	// gets an individual expense item
	@RequestMapping(value = "/expenseItem/{id}", method = RequestMethod.GET)
	public ExpenseItem show(@PathVariable int id) {
		return eiDAO.show(id);
	}
	
	//creates a new expense item
	@Transactional
	@RequestMapping(value = "/expenseItem", method = RequestMethod.POST)
	public ExpenseItem createNewExpenseItem(ExpenseItem ei, @RequestBody String createExpenseItemJson, HttpServletResponse res){
		try{
			ObjectMapper mapper = new ObjectMapper();
			ExpenseItem mappedExpenseItem = mapper.readValue(createExpenseItemJson, ExpenseItem.class);
			res.setStatus(201);
			return eiDAO.create(mappedExpenseItem);
		}catch(Exception e){
			e.printStackTrace();
			System.out.println("ERROR IN EXPENSE ITEM CREATION METHOD IN CONTROLLER");
		}
		return null;
	}

	// updates an existing expense item
	@RequestMapping(value = "/expenseItem/", method = RequestMethod.PUT)
	public ExpenseItem update(@RequestBody String expenseItemJson) {
		try {
			ObjectMapper mapper = new ObjectMapper();
			ExpenseItem mappedExpenseItem = mapper.readValue(expenseItemJson, ExpenseItem.class);
			System.out.println("**********************" + mappedExpenseItem.getId());
			return eiDAO.update(mappedExpenseItem, mappedExpenseItem.getId());
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(e.getMessage());
			System.out.println("ERROR FROM EXPENSE ITEM UPDATE CONTROLLER");
		}
		return null;
	}

	// removes an existing revenue item
	@RequestMapping(value = "/expenseItem/{id}", method = RequestMethod.DELETE)
	public boolean removeExpenseItem(@PathVariable int id) {
		return eiDAO.removeExpenseItem(id);
	}
}
