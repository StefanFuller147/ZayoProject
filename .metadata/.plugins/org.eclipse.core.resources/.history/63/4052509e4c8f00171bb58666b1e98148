package controllers;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ObjectMapper;

import data.RevenueItemDAO;
import entities.RevenueItem;

@RestController
public class RevenueItemController {
	@PersistenceContext
	public EntityManager em;
	
	@Autowired
	private RevenueItemDAO riDAO;

	//test connection
	@RequestMapping(value = "revenueItem/ping", method = RequestMethod.GET)
	public String ping() {
		return "PONG FROM REVENUE CONTROLLER";
	}

	// shows a list of Revenue Items
	@RequestMapping(value = "revenueItem", method = RequestMethod.GET)
	public List<RevenueItem> index() {
		return riDAO.index();
	}

	// shows an individual revenue item
	@RequestMapping(value = "/revenueItem/{id}", method = RequestMethod.GET)
	public RevenueItem show(@PathVariable int id) {
		return riDAO.show(id);
	}
	
	//creates a new revenue item
	@Transactional
	@RequestMapping(value = "/revenueItem", method = RequestMethod.POST)
	public RevenueItem createNewRevenueItem(RevenueItem ri, @RequestBody String createRevenueItemJson, HttpServletResponse res){
		try{
			ObjectMapper mapper = new ObjectMapper();
			RevenueItem mappedRevenueItem = mapper.readValue(createRevenueItemJson, RevenueItem.class);
			res.setStatus(201);
			return riDAO.create(mappedRevenueItem);
		}catch(Exception e){
			e.printStackTrace();
			System.out.println(e.getMessage());
			System.out.println("ERROR IN REVENUE ITEM CREATION METHOD IN CONTROLLER");
		}
		return null;
	}

	// updates an existing revenue item
	@RequestMapping(value = "/revenueItem/{id}", method = RequestMethod.PUT)
	public RevenueItem update(@PathVariable int id, @RequestBody String revenueItemJson, HttpServletResponse res) {
		try {
			ObjectMapper mapper = new ObjectMapper();
			RevenueItem mappedRevenueItem = mapper.readValue(revenueItemJson, RevenueItem.class);
			System.out.println(revenueItemJson);
			res.setStatus(201);
			return riDAO.update(mappedRevenueItem, id);
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(e.getMessage());
			System.out.println("ERROR FROM REVENUE ITEM UPDATE METHOD IN CONTROLLER");
		}
		return null;
	}

	// removes an existing revenue item
	@RequestMapping(value = "/revenueItem/{id}", method = RequestMethod.DELETE)
	public boolean removeReveuneItem(@PathVariable int id) {
		return riDAO.removeRevenueItem(id);
	}
}
